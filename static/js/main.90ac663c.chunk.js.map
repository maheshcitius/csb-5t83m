{"version":3,"sources":["home/home.js","components/service.js","components/ChartNode.js","components/ChartContainer.js","redux/actions/actionTypes.js","redux/actions/chartActions.js","edit-node/chart.js","App.js","serviceWorker.js","redux/state.js","redux/reducers/index.js","redux/reducers/chartReducer.js","redux/index.js","index.js"],"names":["Home","className","to","subject1","Subject","subject2","dragNodeService","asObservable","selectNodeService","id","next","selectedNodeId","ChartNode","datasource","NodeTemplate","draggable","collapsible","multipleSelect","changeHierarchy","onClickNode","node","useRef","useState","isChildrenCollapsed","setIsChildrenCollapsed","topEdgeExpanded","setTopEdgeExpanded","rightEdgeExpanded","setRightEdgeExpanded","bottomEdgeExpanded","setBottomEdgeExpanded","leftEdgeExpanded","setLeftEdgeExpanded","allowedDrop","setAllowedDrop","selected","setSelected","nodeClass","filter","item","join","useEffect","subs1","subscribe","draggedInfo","document","querySelector","draggedNodeId","closest","current","subs2","selectedNodeInfo","unsubscribe","toggleAncestors","actionNode","parentNode","firstChild","classList","contains","remove","isSiblingsCollapsed","Array","from","children","some","toggleSiblings","add","split","previousSibling","toggle","nextSibling","hEdgeClickHandler","e","stopPropagation","target","ref","undefined","onClick","event","onMouseEnter","parent","isAncestorsCollapsed","onMouseLeave","nodeData","relationship","charAt","name","title","doj","length","map","key","defaultProps","ChartContainer","forwardRef","pan","zoom","zoomoutLimit","zoominLimit","containerClass","chartClass","onClickChart","container","chart","downloadButton","startX","setStartX","startY","setStartY","transform","setTransform","panning","setPanning","cursor","setCursor","exporting","setExporting","dataURL","setDataURL","download","setDownload","ds","setDS","dsDigger","JSONDigger","draggedItemData","dropTargetId","a","removeNode","addChildren","useImperativeHandle","exportTo","exportFilename","exportFileextension","originalScrollLeft","scrollLeft","originalScrollTop","scrollTop","html2canvas","width","clientWidth","height","clientHeight","onclone","clonedDoc","style","background","then","canvas","toLowerCase","canvasWidth","Math","floor","canvasHeight","doc","jsPDF","orientation","unit","format","addImage","toDataURL","save","exportPDF","isWebkit","documentElement","isFf","window","sidebar","isEdge","navigator","appName","appVersion","indexOf","msSaveBlob","msToBlob","click","exportPNG","expandAllNodes","querySelectorAll","forEach","el","onWheel","newScale","matrix","targetScale","abs","parseFloat","updateChartScale","deltaY","onMouseUp","onMouseDown","lastX","lastY","parseInt","targetTouches","pageX","pageY","onMouseMove","newX","newY","attachRel","data","flags","href","actionTypes","chartActions","getChart","dispatch","type","updateChartNode","nodeIds","getState","digg","newData","payload","removeChartNode","ids","addChartSibling","addChartChild","updateNodes","removeNodes","addSiblings","OrgChart","useSelector","state","orgchart","useDispatch","Set","selectedNodes","setSelectedNodes","newNodeName","setNewNodeName","newNodeTitle","setNewNodeTitle","newNodeDoj","setNewNodeDoj","isEditMode","setIsEditMode","setParentNode","isSelected","setIsSelected","readSelectedNode","getParent","console","log","addChildNodes","uuidv4","alert","findParent","parents","placeholder","value","onChange","required","disabled","checked","App","activeClassName","exact","path","component","Boolean","location","hostname","match","initialState","reducers","combineReducers","action","states","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.90ac663c.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./home.css\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Home = () => {\n  return (\n    <div className=\"home-wrapper\">\n      <div>\n        <NavLink to=\"chart\">\n          <div className=\"chart-link\">Click to View Chart</div>\n        </NavLink>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import { Subject } from \"rxjs\";\n\nconst subject1 = new Subject();\nconst subject2 = new Subject();\n\nexport const dragNodeService = {\n  sendDragInfo: id => subject1.next({ draggedNodeId: id }),\n  clearDragInfo: () => subject1.next(),\n  getDragInfo: () => subject1.asObservable()\n};\n\nexport const selectNodeService = {\n  sendSelectedNodeInfo: id => subject2.next({ selectedNodeId: id }),\n  clearSelectedNodeInfo: () => subject2.next(),\n  getSelectedNodeInfo: () => subject2.asObservable()\n};\n","import React, { useState, useRef, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { dragNodeService, selectNodeService } from \"./service\";\nimport \"./ChartNode.css\";\n\nconst propTypes = {\n  datasource: PropTypes.object,\n  NodeTemplate: PropTypes.elementType,\n  draggable: PropTypes.bool,\n  collapsible: PropTypes.bool,\n  multipleSelect: PropTypes.bool,\n  changeHierarchy: PropTypes.func,\n  onClickNode: PropTypes.func\n};\n\nconst defaultProps = {\n  draggable: false,\n  collapsible: true,\n  multipleSelect: false\n};\n\nconst ChartNode = ({\n  datasource,\n  NodeTemplate,\n  draggable,\n  collapsible,\n  multipleSelect,\n  changeHierarchy,\n  onClickNode\n}) => {\n  const node = useRef();\n\n  const [isChildrenCollapsed, setIsChildrenCollapsed] = useState(false);\n  const [topEdgeExpanded, setTopEdgeExpanded] = useState();\n  const [rightEdgeExpanded, setRightEdgeExpanded] = useState();\n  const [bottomEdgeExpanded, setBottomEdgeExpanded] = useState();\n  const [leftEdgeExpanded, setLeftEdgeExpanded] = useState();\n  const [allowedDrop, setAllowedDrop] = useState(false);\n  const [selected, setSelected] = useState(false);\n\n  const nodeClass = [\n    \"oc-node\",\n    isChildrenCollapsed ? \"isChildrenCollapsed\" : \"\",\n    allowedDrop ? \"allowedDrop\" : \"\",\n    selected ? \"selected\" : \"\"\n  ]\n    .filter((item) => item)\n    .join(\" \");\n\n  useEffect(() => {\n    const subs1 = dragNodeService.getDragInfo().subscribe((draggedInfo) => {\n      if (draggedInfo) {\n        setAllowedDrop(\n          !document\n            .querySelector(\"#\" + draggedInfo.draggedNodeId)\n            .closest(\"li\")\n            .querySelector(\"#\" + node.current.id)\n            ? true\n            : false\n        );\n      } else {\n        setAllowedDrop(false);\n      }\n    });\n\n    const subs2 = selectNodeService\n      .getSelectedNodeInfo()\n      .subscribe((selectedNodeInfo) => {\n        if (selectedNodeInfo) {\n          if (multipleSelect) {\n            if (selectedNodeInfo.selectedNodeId === datasource.id) {\n              setSelected(true);\n            }\n          } else {\n            setSelected(selectedNodeInfo.selectedNodeId === datasource.id);\n          }\n        } else {\n          setSelected(false);\n        }\n      });\n\n    return () => {\n      subs1.unsubscribe();\n      subs2.unsubscribe();\n    };\n  }, [multipleSelect, datasource]);\n\n  const addArrows = (e) => {\n    const node = e.target.closest(\"li\");\n    const parent = node.parentNode.closest(\"li\");\n    const isAncestorsCollapsed =\n      node && parent\n        ? parent.firstChild.classList.contains(\"hidden\")\n        : undefined;\n    const isSiblingsCollapsed = Array.from(\n      node.parentNode.children\n    ).some((item) => item.classList.contains(\"hidden\"));\n\n    setTopEdgeExpanded(!isAncestorsCollapsed);\n    setRightEdgeExpanded(!isSiblingsCollapsed);\n    setLeftEdgeExpanded(!isSiblingsCollapsed);\n    setBottomEdgeExpanded(!isChildrenCollapsed);\n  };\n\n  const removeArrows = () => {\n    setTopEdgeExpanded(undefined);\n    setRightEdgeExpanded(undefined);\n    setBottomEdgeExpanded(undefined);\n    setLeftEdgeExpanded(undefined);\n  };\n\n  const toggleAncestors = (actionNode) => {\n    let node = actionNode.parentNode.closest(\"li\");\n    if (!node) return;\n    const isAncestorsCollapsed = node.firstChild.classList.contains(\"hidden\");\n    if (isAncestorsCollapsed) {\n      // 向上展开，只展开一级\n      actionNode.classList.remove(\"isAncestorsCollapsed\");\n      node.firstChild.classList.remove(\"hidden\");\n    } else {\n      // 向下折叠，则折叠所有祖先节点以及祖先节点的兄弟节点\n      const isSiblingsCollapsed = Array.from(\n        actionNode.parentNode.children\n      ).some((item) => item.classList.contains(\"hidden\"));\n      if (!isSiblingsCollapsed) {\n        toggleSiblings(actionNode);\n      }\n      actionNode.classList.add(\n        ...(\n          \"isAncestorsCollapsed\" +\n          (isSiblingsCollapsed ? \"\" : \" isSiblingsCollapsed\")\n        ).split(\" \")\n      );\n      node.firstChild.classList.add(\"hidden\");\n\n      if (\n        node.parentNode.closest(\"li\") &&\n        !node.parentNode.closest(\"li\").firstChild.classList.contains(\"hidden\")\n      ) {\n        toggleAncestors(node);\n      }\n    }\n  };\n\n  const topEdgeClickHandler = (e) => {\n    e.stopPropagation();\n    setTopEdgeExpanded(!topEdgeExpanded);\n    toggleAncestors(e.target.closest(\"li\"));\n  };\n\n  const bottomEdgeClickHandler = (e) => {\n    e.stopPropagation();\n    setIsChildrenCollapsed(!isChildrenCollapsed);\n    setBottomEdgeExpanded(!bottomEdgeExpanded);\n  };\n\n  const toggleSiblings = (actionNode) => {\n    let node = actionNode.previousSibling;\n    const isSiblingsCollapsed = Array.from(\n      actionNode.parentNode.children\n    ).some((item) => item.classList.contains(\"hidden\"));\n    actionNode.classList.toggle(\"isSiblingsCollapsed\", !isSiblingsCollapsed);\n    while (node) {\n      if (isSiblingsCollapsed) {\n        node.classList.remove(\"hidden\");\n      } else {\n        node.classList.add(\"hidden\");\n      }\n      node = node.previousSibling;\n    }\n    node = actionNode.nextSibling;\n    while (node) {\n      if (isSiblingsCollapsed) {\n        node.classList.remove(\"hidden\");\n      } else {\n        node.classList.add(\"hidden\");\n      }\n      node = node.nextSibling;\n    }\n    const isAncestorsCollapsed = actionNode.parentNode\n      .closest(\"li\")\n      .firstChild.classList.contains(\"hidden\");\n    if (isAncestorsCollapsed) {\n      toggleAncestors(actionNode);\n    }\n  };\n\n  const hEdgeClickHandler = (e) => {\n    e.stopPropagation();\n    setLeftEdgeExpanded(!leftEdgeExpanded);\n    setRightEdgeExpanded(!rightEdgeExpanded);\n    toggleSiblings(e.target.closest(\"li\"));\n  };\n\n  const filterAllowedDropNodes = (id) => {\n    dragNodeService.sendDragInfo(id);\n  };\n\n  const clickNodeHandler = (event) => {\n    if (onClickNode) {\n      onClickNode(datasource);\n    }\n\n    selectNodeService.sendSelectedNodeInfo(datasource.id);\n  };\n\n  const dragstartHandler = (event) => {\n    const copyDS = { ...datasource };\n    delete copyDS.relationship;\n    event.dataTransfer.setData(\"text/plain\", JSON.stringify(copyDS));\n    // highlight all potential drop targets\n    filterAllowedDropNodes(node.current.id);\n  };\n\n  const dragoverHandler = (event) => {\n    // prevent default to allow drop\n    event.preventDefault();\n  };\n\n  const dragendHandler = () => {\n    // reset background of all potential drop targets\n    dragNodeService.clearDragInfo();\n  };\n\n  const dropHandler = (event) => {\n    if (!event.currentTarget.classList.contains(\"allowedDrop\")) {\n      return;\n    }\n    dragNodeService.clearDragInfo();\n    changeHierarchy(\n      JSON.parse(event.dataTransfer.getData(\"text/plain\")),\n      event.currentTarget.id\n    );\n  };\n\n  return (\n    <li className=\"oc-hierarchy\">\n      <div\n        ref={node}\n        id={datasource.id}\n        className={nodeClass}\n        draggable={draggable ? \"true\" : undefined}\n        onClick={clickNodeHandler}\n        onMouseEnter={addArrows}\n        onMouseLeave={removeArrows}\n      >\n        {NodeTemplate ? (\n          <NodeTemplate nodeData={datasource} />\n        ) : (\n          <>\n            <div className=\"oc-heading\">\n              {datasource.relationship &&\n                datasource.relationship.charAt(2) === \"1\" && (\n                  <i className=\"oci oci-leader oc-symbol\" />\n                )}\n              {datasource.name}\n            </div>\n            <div className=\"oc-content\">{datasource.title}</div>\n            <div className=\"oc-content\">{datasource.doj && datasource.doj}</div>\n          </>\n        )}\n        {collapsible &&\n          datasource.relationship &&\n          datasource.relationship.charAt(0) === \"1\" && (\n            <i\n              className={`oc-edge verticalEdge topEdge oci ${\n                topEdgeExpanded === undefined\n                  ? \"\"\n                  : topEdgeExpanded\n                  ? \"oci-chevron-down\"\n                  : \"oci-chevron-up\"\n              }`}\n              onClick={topEdgeClickHandler}\n            />\n          )}\n        {collapsible &&\n          datasource.relationship &&\n          datasource.relationship.charAt(1) === \"1\" && (\n            <>\n              <i\n                className={`oc-edge horizontalEdge rightEdge oci ${\n                  rightEdgeExpanded === undefined\n                    ? \"\"\n                    : rightEdgeExpanded\n                    ? \"oci-chevron-left\"\n                    : \"oci-chevron-right\"\n                }`}\n                onClick={hEdgeClickHandler}\n              />\n              <i\n                className={`oc-edge horizontalEdge leftEdge oci ${\n                  leftEdgeExpanded === undefined\n                    ? \"\"\n                    : leftEdgeExpanded\n                    ? \"oci-chevron-right\"\n                    : \"oci-chevron-left\"\n                }`}\n                onClick={hEdgeClickHandler}\n              />\n            </>\n          )}\n        {collapsible &&\n          datasource.relationship &&\n          datasource.relationship.charAt(2) === \"1\" && (\n            <i\n              className={`oc-edge verticalEdge bottomEdge oci ${\n                bottomEdgeExpanded === undefined\n                  ? \"\"\n                  : bottomEdgeExpanded\n                  ? \"oci-chevron-up\"\n                  : \"oci-chevron-down\"\n              }`}\n              onClick={bottomEdgeClickHandler}\n            />\n          )}\n      </div>\n      {datasource.children && datasource.children.length > 0 && (\n        <ul className={isChildrenCollapsed ? \"hidden\" : \"\"}>\n          {datasource.children.map((node) => (\n            <ChartNode\n              datasource={node}\n              NodeTemplate={NodeTemplate}\n              id={node.id}\n              key={node.id}\n              collapsible={collapsible}\n              multipleSelect={multipleSelect}\n              changeHierarchy={changeHierarchy}\n              onClickNode={onClickNode}\n            />\n          ))}\n        </ul>\n      )}\n    </li>\n  );\n};\n\nChartNode.propTypes = propTypes;\nChartNode.defaultProps = defaultProps;\n\nexport default ChartNode;\n","import React, {\n  useState,\n  useEffect,\n  useRef,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport PropTypes from \"prop-types\";\nimport { selectNodeService } from \"./service\";\nimport JSONDigger from \"json-digger\";\nimport html2canvas from \"html2canvas\";\nimport jsPDF from \"jspdf\";\nimport ChartNode from \"./ChartNode\";\nimport \"./ChartContainer.css\";\n\nconst propTypes = {\n  datasource: PropTypes.object.isRequired,\n  pan: PropTypes.bool,\n  zoom: PropTypes.bool,\n  zoomoutLimit: PropTypes.number,\n  zoominLimit: PropTypes.number,\n  containerClass: PropTypes.string,\n  chartClass: PropTypes.string,\n  NodeTemplate: PropTypes.elementType,\n  draggable: PropTypes.bool,\n  collapsible: PropTypes.bool,\n  multipleSelect: PropTypes.bool,\n  onClickNode: PropTypes.func,\n  onClickChart: PropTypes.func,\n};\n\nconst defaultProps = {\n  pan: false,\n  zoom: false,\n  zoomoutLimit: 0.5,\n  zoominLimit: 7,\n  containerClass: \"\",\n  chartClass: \"\",\n  draggable: false,\n  collapsible: true,\n  multipleSelect: false,\n};\n\nconst ChartContainer = forwardRef(\n  (\n    {\n      datasource,\n      pan,\n      zoom,\n      zoomoutLimit,\n      zoominLimit,\n      containerClass,\n      chartClass,\n      NodeTemplate,\n      draggable,\n      collapsible,\n      multipleSelect,\n      onClickNode,\n      onClickChart,\n    },\n    ref\n  ) => {\n    const container = useRef();\n    const chart = useRef();\n    const downloadButton = useRef();\n\n    const [startX, setStartX] = useState(0);\n    const [startY, setStartY] = useState(0);\n    const [transform, setTransform] = useState(\"\");\n    const [panning, setPanning] = useState(false);\n    const [cursor, setCursor] = useState(\"default\");\n    const [exporting, setExporting] = useState(false);\n    const [dataURL, setDataURL] = useState(\"\");\n    const [download, setDownload] = useState(\"\");\n\n    const attachRel = (data, flags) => {\n      data.relationship =\n        flags + (data.children && data.children.length > 0 ? 1 : 0);\n      if (data.children) {\n        data.children.forEach(function (item) {\n          attachRel(item, \"1\" + (data.children.length > 1 ? 1 : 0));\n        });\n      }\n      return data;\n    };\n\n    const [ds, setDS] = useState(datasource);\n    useEffect(() => {\n      setDS(datasource);\n    }, [datasource]);\n\n    const dsDigger = new JSONDigger(datasource, \"id\", \"children\");\n\n    const clickChartHandler = (event) => {\n      if (!event.target.closest(\".oc-node\")) {\n        if (onClickChart) {\n          onClickChart();\n        }\n        selectNodeService.clearSelectedNodeInfo();\n      }\n    };\n\n    const panEndHandler = () => {\n      setPanning(false);\n      setCursor(\"default\");\n    };\n\n    const panHandler = (e) => {\n      let newX = 0;\n      let newY = 0;\n      if (!e.targetTouches) {\n        // pand on desktop\n        newX = e.pageX - startX;\n        newY = e.pageY - startY;\n      } else if (e.targetTouches.length === 1) {\n        // pan on mobile device\n        newX = e.targetTouches[0].pageX - startX;\n        newY = e.targetTouches[0].pageY - startY;\n      } else if (e.targetTouches.length > 1) {\n        return;\n      }\n      if (transform === \"\") {\n        if (transform.indexOf(\"3d\") === -1) {\n          setTransform(\"matrix(1,0,0,1,\" + newX + \",\" + newY + \")\");\n        } else {\n          setTransform(\n            \"matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,\" + newX + \", \" + newY + \",0,1)\"\n          );\n        }\n      } else {\n        let matrix = transform.split(\",\");\n        if (transform.indexOf(\"3d\") === -1) {\n          matrix[4] = newX;\n          matrix[5] = newY + \")\";\n        } else {\n          matrix[12] = newX;\n          matrix[13] = newY;\n        }\n        setTransform(matrix.join(\",\"));\n      }\n    };\n\n    const panStartHandler = (e) => {\n      if (e.target.closest(\".oc-node\")) {\n        setPanning(false);\n        return;\n      } else {\n        setPanning(true);\n        setCursor(\"move\");\n      }\n      let lastX = 0;\n      let lastY = 0;\n      if (transform !== \"\") {\n        let matrix = transform.split(\",\");\n        if (transform.indexOf(\"3d\") === -1) {\n          lastX = parseInt(matrix[4]);\n          lastY = parseInt(matrix[5]);\n        } else {\n          lastX = parseInt(matrix[12]);\n          lastY = parseInt(matrix[13]);\n        }\n      }\n      if (!e.targetTouches) {\n        // pand on desktop\n        setStartX(e.pageX - lastX);\n        setStartY(e.pageY - lastY);\n      } else if (e.targetTouches.length === 1) {\n        // pan on mobile device\n        setStartX(e.targetTouches[0].pageX - lastX);\n        setStartY(e.targetTouches[0].pageY - lastY);\n      } else if (e.targetTouches.length > 1) {\n        return;\n      }\n    };\n\n    const updateChartScale = (newScale) => {\n      let matrix = [];\n      let targetScale = 1;\n      if (transform === \"\") {\n        setTransform(\"matrix(\" + newScale + \", 0, 0, \" + newScale + \", 0, 0)\");\n      } else {\n        matrix = transform.split(\",\");\n        if (transform.indexOf(\"3d\") === -1) {\n          targetScale = Math.abs(window.parseFloat(matrix[3]) * newScale);\n          if (targetScale > zoomoutLimit && targetScale < zoominLimit) {\n            matrix[0] = \"matrix(\" + targetScale;\n            matrix[3] = targetScale;\n            setTransform(matrix.join(\",\"));\n          }\n        } else {\n          targetScale = Math.abs(window.parseFloat(matrix[5]) * newScale);\n          if (targetScale > zoomoutLimit && targetScale < zoominLimit) {\n            matrix[0] = \"matrix3d(\" + targetScale;\n            matrix[5] = targetScale;\n            setTransform(matrix.join(\",\"));\n          }\n        }\n      }\n    };\n\n    const zoomHandler = (e) => {\n      let newScale = 1 + (e.deltaY > 0 ? -0.2 : 0.2);\n      updateChartScale(newScale);\n    };\n\n    const exportPDF = (canvas, exportFilename) => {\n      const canvasWidth = Math.floor(canvas.width);\n      const canvasHeight = Math.floor(canvas.height);\n      const doc =\n        canvasWidth > canvasHeight\n          ? new jsPDF({\n              orientation: \"landscape\",\n              unit: \"px\",\n              format: [canvasWidth, canvasHeight],\n            })\n          : new jsPDF({\n              orientation: \"portrait\",\n              unit: \"px\",\n              format: [canvasHeight, canvasWidth],\n            });\n      doc.addImage(canvas.toDataURL(\"image/jpeg\", 1.0), \"JPEG\", 0, 0);\n      doc.save(exportFilename + \".pdf\");\n    };\n\n    const exportPNG = (canvas, exportFilename) => {\n      const isWebkit = \"WebkitAppearance\" in document.documentElement.style;\n      const isFf = !!window.sidebar;\n      const isEdge =\n        navigator.appName === \"Microsoft Internet Explorer\" ||\n        (navigator.appName === \"Netscape\" &&\n          navigator.appVersion.indexOf(\"Edge\") > -1);\n\n      if ((!isWebkit && !isFf) || isEdge) {\n        window.navigator.msSaveBlob(canvas.msToBlob(), exportFilename + \".png\");\n      } else {\n        setDataURL(canvas.toDataURL());\n        setDownload(exportFilename + \".png\");\n        downloadButton.current.click();\n      }\n    };\n\n    const changeHierarchy = async (draggedItemData, dropTargetId) => {\n      await dsDigger.removeNode(draggedItemData.id);\n      await dsDigger.addChildren(dropTargetId, draggedItemData);\n      setDS({ ...dsDigger.ds });\n    };\n\n    useImperativeHandle(ref, () => ({\n      exportTo: (exportFilename, exportFileextension) => {\n        exportFilename = exportFilename || \"OrgChart\";\n        exportFileextension = exportFileextension || \"png\";\n        setExporting(true);\n        const originalScrollLeft = container.current.scrollLeft;\n        container.current.scrollLeft = 0;\n        const originalScrollTop = container.current.scrollTop;\n        container.current.scrollTop = 0;\n        html2canvas(chart.current, {\n          width: chart.current.clientWidth,\n          height: chart.current.clientHeight,\n          onclone: function (clonedDoc) {\n            clonedDoc.querySelector(\".orgchart\").style.background = \"none\";\n            clonedDoc.querySelector(\".orgchart\").style.transform = \"\";\n          },\n        }).then(\n          (canvas) => {\n            if (exportFileextension.toLowerCase() === \"pdf\") {\n              exportPDF(canvas, exportFilename);\n            } else {\n              exportPNG(canvas, exportFilename);\n            }\n            setExporting(false);\n            container.current.scrollLeft = originalScrollLeft;\n            container.current.scrollTop = originalScrollTop;\n          },\n          () => {\n            setExporting(false);\n            container.current.scrollLeft = originalScrollLeft;\n            container.current.scrollTop = originalScrollTop;\n          }\n        );\n      },\n      expandAllNodes: () => {\n        chart.current\n          .querySelectorAll(\n            \".oc-node.hidden, .oc-hierarchy.hidden, .isSiblingsCollapsed, .isAncestorsCollapsed\"\n          )\n          .forEach((el) => {\n            el.classList.remove(\n              \"hidden\",\n              \"isSiblingsCollapsed\",\n              \"isAncestorsCollapsed\"\n            );\n          });\n      },\n    }));\n\n    return (\n      <div\n        ref={container}\n        className={\"orgchart-container \" + containerClass}\n        onWheel={zoom ? zoomHandler : undefined}\n        onMouseUp={pan && panning ? panEndHandler : undefined}\n      >\n        <div\n          ref={chart}\n          className={\"orgchart \" + chartClass}\n          style={{ transform: transform, cursor: cursor }}\n          onClick={clickChartHandler}\n          onMouseDown={pan ? panStartHandler : undefined}\n          onMouseMove={pan && panning ? panHandler : undefined}\n        >\n          <ul>\n            <ChartNode\n              datasource={attachRel(ds, \"00\")}\n              NodeTemplate={NodeTemplate}\n              draggable={draggable}\n              collapsible={collapsible}\n              multipleSelect={multipleSelect}\n              changeHierarchy={changeHierarchy}\n              onClickNode={onClickNode}\n            />\n          </ul>\n        </div>\n        <a\n          className=\"oc-download-btn hidden\"\n          ref={downloadButton}\n          href={dataURL}\n          download={download}\n        >\n          &nbsp;\n        </a>\n        <div className={`oc-mask ${exporting ? \"\" : \"hidden\"}`}>\n          <i className=\"oci oci-spinner spinner\"></i>\n        </div>\n      </div>\n    );\n  }\n);\n\nChartContainer.propTypes = propTypes;\nChartContainer.defaultProps = defaultProps;\n\nexport default ChartContainer;\n","export const actionTypes = {\n  //Chart Action Types\n  ADD_CHART_CARD: \"ADD_CHART_CARD\",\n  UPDATE_CHART_CARD: \"UPDATE_CHART_CARD\",\n  REMOVE_CHART_CARD: \"REMOVE_CHART_CARD\",\n\n  ADD_CHILD: \"ADD_CHILD\",\n  REMOVE_CHILD: \"REMOVE_CHILD\",\n  ADD_SIBBLING: \"ADD_SIBBLING\",\n  UPDATE_NODE: \"UPDATE_NODE\",\n\n  GET_CHART: \"GET_CHART\",\n  UPDATE: \"UPDATE\",\n};\n","import { actionTypes } from \"./actionTypes\";\nimport JSONDigger from \"json-digger\"; // Helps to manupulate json object\n\n// export chart actions\nexport const chartActions = {\n  getChart,\n  updateChartNode,\n  removeChartNode,\n  addChartSibling,\n  addChartChild\n};\n\nfunction getChart() {\n  return (dispatch) => {\n    dispatch({ type: actionTypes.GET_CHART });\n  };\n}\n\n/**\n * Function that removes the chart node and send  new data to reducer\n * @param    {Object} node    Current Node\n * @param {Array} ids Nodes ids array to remove\n */\nfunction removeChartNode(ids, node) {\n  return async (dispatch, getState) => {\n    const { chart } = getState();\n    const type = actionTypes.REMOVE_CHILD;\n    const newData = await digg(ids, { chart, node, type });\n    dispatch({ type: actionTypes.UPDATE, payload: newData });\n  };\n}\n\n/**\n * Function that adds child node to  chart  and send  new data to reducer\n * @param    {Object} node     Node to add\n * @param {Array} ids Ids to which node to be added\n */\nfunction addChartChild(ids, node) {\n  return async (dispatch, getState) => {\n    const { chart } = getState();\n    const type = actionTypes.ADD_CHILD;\n    const newData = await digg(ids, { chart, node, type });\n    dispatch({ type: actionTypes.UPDATE, payload: newData });\n  };\n}\nfunction addChartSibling(ids, node) {\n  return (dispatch, getState) => {\n    const { chart } = getState();\n    const type = actionTypes.ADD_SIBBLING;\n    const newData = digg({ chart, ids, node, type });\n    dispatch({ type: actionTypes.UPDATE, payload: newData });\n  };\n}\n/**\n * Function that updates the current node   and send  new data to reducer\n * @param    {Object} node     Node that need to be updated\n * @param {Array} ids Ids to which node should update\n */\n\nfunction updateChartNode(nodeIds, node) {\n  return async (dispatch, getState) => {\n    const { chart } = getState();\n    const type = actionTypes.UPDATE_NODE;\n    const newData = await digg(nodeIds, { chart, node, type });\n    dispatch({ type: actionTypes.UPDATE, payload: newData });\n  };\n}\n\n/**\n * Function that mutates and returns  the updated chart data\n * @param    {Object} node     Node object\n * @param {Array} ids Ids to which node should mutate\n * @returns {object} updated chart data\n */\n\nasync function digg(nodeIds, newData) {\n  const { chart, node, type = \"ADD\" } = newData;\n\n  const dsDigger = new JSONDigger(chart, \"id\", \"children\");\n\n  switch (type) {\n    case actionTypes.UPDATE_NODE:\n      await dsDigger.updateNodes(nodeIds, node);\n      return { ...dsDigger.ds };\n    case actionTypes.REMOVE_CHILD:\n      await dsDigger.removeNodes(nodeIds);\n      return { ...dsDigger.ds };\n    case actionTypes.ADD_CHILD:\n      await dsDigger.addChildren(nodeIds, node);\n      return { ...dsDigger.ds };\n    case actionTypes.ADD_SIBBLING:\n      await dsDigger.addSiblings(nodeIds, node);\n      return { ...dsDigger.ds };\n    default:\n      return { ...dsDigger.ds };\n  }\n}\n","import React, { useRef, useState, useEffect } from \"react\";\nimport JSONDigger from \"json-digger\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport OrganizationChart from \"../components/ChartContainer\";\nimport \"./edit-node.css\";\nimport { useSelector } from \"react-redux\";\nimport { chartActions } from \"../redux/actions\";\nimport { useDispatch } from \"react-redux\";\n\nconst OrgChart = () => {\n  const chart = useSelector((state) => state.chart);\n\n  const orgchart = useRef();\n  const [ds, setDS] = useState(chart);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    setDS(chart);\n  }, [chart]);\n\n  const dsDigger = new JSONDigger(ds, \"id\", \"children\");\n\n  const [selectedNodes, setSelectedNodes] = useState(new Set());\n  const [newNodeName, setNewNodeName] = useState(\"\");\n  const [newNodeTitle, setNewNodeTitle] = useState(\"\");\n  const [newNodeDoj, setNewNodeDoj] = useState(\"\");\n  const [isEditMode, setIsEditMode] = useState(true);\n  const [parentNode, setParentNode] = useState();\n  const [isSelected, setIsSelected] = useState(false);\n\n  const readSelectedNode = async (nodeData) => {\n    setSelectedNodes(new Set([nodeData]));\n    setIsSelected(true);\n    setNewNodeTitle(nodeData.title);\n    setNewNodeName(nodeData.name);\n    setNewNodeDoj(nodeData.doj);\n\n    try {\n      let parentNode = await getParent(nodeData.id);\n      setParentNode(parentNode);\n    } catch (err) {\n      console.log(\"Error :\", err);\n      setParentNode(false);\n    }\n  };\n\n  const clearSelectedNode = () => {\n    setSelectedNodes(new Set());\n  };\n\n  const getNewNodes = () => {\n    const nodes = [];\n\n    nodes.push({\n      id: uuidv4(),\n      name: newNodeName,\n      title: newNodeTitle,\n      doj: newNodeDoj\n    });\n\n    return nodes;\n  };\n\n  const addChildNodes = async () => {\n    isSelected\n      ? dispatch(\n          chartActions.addChartChild([...selectedNodes][0].id, {\n            id: uuidv4(),\n            name: newNodeName,\n            title: newNodeTitle,\n            doj: newNodeDoj\n          })\n        )\n      : alert(\"Select Node\");\n  };\n\n  const addRootNode = () => {\n    dsDigger.addRoot(getNewNodes()[0]);\n    setDS({ ...dsDigger.ds });\n  };\n\n  const getParent = async (id) => {\n    let parents = await dsDigger.findParent(id);\n    return parents;\n  };\n  const remove = async () => {\n    if (parentNode && isSelected) {\n      dispatch(\n        chartActions.removeChartNode(\n          [...selectedNodes].map((node) => node.id),\n          {\n            id: uuidv4(),\n            name: newNodeName,\n            title: newNodeTitle,\n            doj: newNodeDoj\n          }\n        )\n      );\n    } else {\n      alert(\"Unable to Remove\");\n    }\n    // if (parentNode.id) {\n\n    //   await dsDigger.addChildren(\n    //     parentNode.id,\n    //     currentNode.children?.map((node) => {\n    //       let s = {};\n    //       s.title = node.title;\n    //       s.name = node.name;\n    //       s.doj = node.doj;\n\n    //       return s;\n    //     })\n    //   );\n    // }\n\n    setSelectedNodes(new Set());\n  };\n\n  const onModeChange = (e) => {\n    setIsEditMode(e.target.checked);\n    if (e.target.checked) {\n      orgchart.current.expandAllNodes();\n    }\n  };\n\n  const updateNodes = async () => {\n    isSelected\n      ? dispatch(\n          chartActions.updateChartNode(\n            [...selectedNodes].map((node) => node.id),\n            {\n              id: uuidv4(),\n              name: newNodeName,\n              title: newNodeTitle,\n              doj: newNodeDoj\n            }\n          )\n        )\n      : alert(\"Select Node\");\n  };\n\n  const exportTo = () => {\n    orgchart.current.exportTo(\"organization_chart\", \"png\");\n  };\n\n  return (\n    <div className=\"edit-chart-wrapper\">\n      <section className=\"toolbar\">\n        <div className=\"new-nodes\">\n          <div className=\"container\">\n            <div className=\"row g-3\">\n              <div className=\"row\">\n                <h6 className=\"pt-2\">Add/Update Node</h6>\n                <div className=\"col-lg-4 col-md-4 col-sm-12\">\n                  <label className=\"form-label\">Name</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control is-valid\"\n                    id=\"validationServer01\"\n                    placeholder=\"Name\"\n                    value={newNodeName}\n                    onChange={(e) => setNewNodeName(e.target.value)}\n                    required\n                  />\n                </div>\n                <div className=\"col-lg-4 col-md-4 col-sm-12\">\n                  <label className=\"form-label\">Title</label>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Title\"\n                    className=\"form-control is-valid\"\n                    id=\"validationServer02\"\n                    value={newNodeTitle}\n                    onChange={(e) => setNewNodeTitle(e.target.value)}\n                    required\n                  />\n                </div>\n                <div className=\"col-lg-4 col-md-4 col-sm-12\">\n                  <label className=\"form-label\">Date Of Joining</label>\n\n                  <input\n                    type=\"date\"\n                    placeholder=\"Date of Joining\"\n                    className=\"form-control is-valid\"\n                    id=\"validationServer02\"\n                    value={newNodeDoj}\n                    onChange={(e) => setNewNodeDoj(e.target.value)}\n                  />\n                </div>\n              </div>\n              <div className=\"row pt-2\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-primary btn-sm\"\n                  disabled={!isEditMode}\n                  onClick={updateNodes}\n                >\n                  Update\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-primary btn-sm\"\n                  disabled={!isEditMode}\n                  onClick={addChildNodes}\n                >\n                  Add Child\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-danger btn-sm\"\n                  disabled={!isEditMode}\n                  onClick={remove}\n                >\n                  Remove\n                </button>\n\n                <button\n                  type=\"button\"\n                  className=\"btn btn-info btn-sm\"\n                  disabled={!isEditMode}\n                  onClick={exportTo}\n                >\n                  Export\n                </button>\n                <div className=\"form-check\">\n                  <input\n                    className=\"form-check-input\"\n                    type=\"checkbox\"\n                    checked={isEditMode}\n                    onChange={onModeChange}\n                  />\n                  <label className=\"form-check-label\">Edit Mode</label>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      <OrganizationChart\n        ref={orgchart}\n        datasource={ds}\n        collapsible={!isEditMode}\n        onClickNode={readSelectedNode}\n        onClickChart={clearSelectedNode}\n        pan={true}\n        zoom={true}\n      />\n    </div>\n  );\n};\n\nexport default OrgChart;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, NavLink } from \"react-router-dom\";\nimport Home from \"./home/home\";\nimport OrgChart from \"./edit-node/chart\";\n\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <Router>\n      <div className=\"wrapper\">\n        <nav>\n          <NavLink to=\"/chart\" activeClassName=\"selected\">\n            OrgChart\n          </NavLink>\n        </nav>\n\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/chart\" component={OrgChart} />\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","//Initial Chat Object\nexport const initialState = {\n  id: \"n1\",\n  name: \"Lao Lao\",\n  title: \"general manager\",\n  doj: \"2021-04-12\",\n  children: [\n    {\n      id: \"n2\",\n      name: \"Bo Miao\",\n      title: \"department manager\",\n      doj: \"2015-05-07\"\n    },\n    {\n      id: \"n3\",\n      name: \"Su Miao\",\n      title: \"department manager\",\n      doj: \"2019-08-09\",\n      children: [\n        {\n          id: \"n4\",\n          name: \"Tie Hua\",\n          title: \"senior engineer\",\n          doj: \"2020-04-12\"\n        },\n        {\n          id: \"n5\",\n          name: \"Hei Hei\",\n          title: \"senior engineer\",\n          children: [\n            {\n              id: \"n6\",\n              name: \"Dan Dan\",\n              title: \"engineer\",\n              doj: \"2021-04-03\"\n            },\n            {\n              id: \"n7\",\n              name: \"Xiang Xiang\",\n              title: \"engineer\",\n              doj: \"2021-03-02\"\n            }\n          ]\n        },\n        {\n          id: \"n8\",\n          name: \"Pang Pang\",\n          title: \"senior engineer\",\n          doj: \"2021-02-12\"\n        }\n      ]\n    },\n    {\n      id: \"n9\",\n      name: \"Hong Miao\",\n      title: \"department manager\",\n      doj: \"2021-04-10\"\n    },\n    {\n      id: \"n10\",\n      name: \"Chun Miao\",\n      title: \"department manager\",\n      doj: \"2021-01-12\",\n      children: [\n        {\n          id: \"n11\",\n          name: \"Yue ss\",\n          title: \"senior engineer\",\n          doj: \"2021-04-12\"\n        }\n      ]\n    }\n  ]\n};\n","import chartReducer from './chartReducer';\nimport { combineReducers } from 'redux';\nconst reducers = combineReducers({\n  chart: chartReducer,\n});\nexport default reducers;\n","import { initialState } from \"../state.js\";\nimport { actionTypes } from \"../actions/actionTypes\";\n\n//Chart Reducer\n/**\n * Function that handles state mutations\n * @param    {Object} state     chart Object\n * @param {object} action type and payload\n * @returns {object} updated chart data\n */\nexport default function chartReducer(state = initialState, action) {\n  switch (action.type) {\n    case actionTypes.GET_CHART:\n      return { initialState };\n\n    case actionTypes.UPDATE:\n      let states = action.payload;\n      return states;\n\n    default:\n      return state;\n  }\n}\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\"; // Middleware for async operations in redux\nimport reducers from \"./reducers\";\n\n//Creating store\nexport const store = createStore(reducers, applyMiddleware(thunkMiddleware));\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux\";\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}